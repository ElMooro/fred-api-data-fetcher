export interface IndicatorMetadata {
  id: string;
  name: string;
  frequency: string;
  unit: string;
  description: string;
}

export interface DataPoint {
  date: string;
  value: number;
  rawValue?: number;
}

export interface WatchlistItem {
  id: string;
  source: string;
  indicator: string;
  name: string;
  transformation: string;
  transformationName: string;
  startDate: string;
  endDate: string;
  frequency: string;
  dateAdded: string;
  metadata?: {
    unit?: string;
    description?: string;
  };
}

export interface Statistics {
  min: number;
  max: number;
  mean: number;
  median: number;
  stdDev: number;
  count: number;
  error?: string;
}

export interface LiveDataPoint {
  value: string;
  change: string;
}

export interface LiveData {
  [key: string]: LiveDataPoint | string | undefined;
  lastUpdated?: string;
}

export type ConnectionStatus = 
  "Connected" | 
  "Disconnected" | 
  "Connecting..." | 
  "Connection Error" | 
  "Reconnecting" | 
  "Reconnect Failed";

// Change TimeFrame from string literal type to interface to match usage in constants
export interface TimeFrame {
  id: string;
  name: string;
  days: number;
}

// Change FinancialCrisis from type to interface
export interface FinancialCrisis {
  id: string;
  name: string;
  startDate: string;
  endDate: string;
  description: string;
}

// Change Transformation from string literal type to string for flexibility
export type Transformation = string;

// Define Indicator as string
export type Indicator = string;

// Change ErrorType from enum to type with string literals to match usage in constants
export type ErrorType = 
  'INVALID_DATE_RANGE' | 
  'INVALID_DATE_FORMAT' | 
  'NO_DATA_RETURNED' | 
  'DUPLICATE_WATCHLIST' | 
  'TRANSFORMATION_ERROR' | 
  'NETWORK_ERROR' | 
  'API_ERROR' | 
  'GENERAL_ERROR' | 
  'DATA_SOURCE_ERROR';
