const express = require('express');
const axios = require('axios');
const cors = require('cors');

const app = express();
const PORT = 4000;

// Middleware
app.use(cors());
app.use(express.json());

// Calculate period-to-period changes
function calculateChanges(data, valueKey = 'value') {
  return data.map((item, index) => {
    if (index === 0) {
      return { ...item, change: null, percentChange: null };
    }
    
    const currentValue = parseFloat(item[valueKey]);
    const previousValue = parseFloat(data[index - 1][valueKey]);
    
    if (isNaN(currentValue) || isNaN(previousValue)) {
      return { ...item, change: null, percentChange: null };
    }
    
    const change = currentValue - previousValue;
    const percentChange = previousValue !== 0 ? (change / Math.abs(previousValue)) * 100 : null;
    
    return {
      ...item,
      change: change.toFixed(4),
      percentChange: percentChange !== null ? percentChange.toFixed(2) + '%' : null,
    };
  });
}

// Home route
app.get('/', (req, res) => {
  res.json({
    message: 'Financial Data Platform API',
    version: '1.0.0',
    endpoints: {
      fred: '/api/fred/series/:seriesId',
      treasury: '/api/treasury/debt'
    }
  });
});

// FRED API endpoint
app.get('/api/fred/series/:seriesId', async (req, res) => {
  try {
    const { seriesId } = req.params;
    const { calculateChanges: calcChanges } = req.query;
    
    const response = await axios.get('https://api.stlouisfed.org/fred/series/observations', {
      params: {
        series_id: seriesId,
        api_key: '2f057499936072679d8843d7fce99989',
        file_type: 'json',
        observation_start: '2020-01-01',
        observation_end: '2025-01-01'
      }
    });
    
    // Add period-to-period changes
    if (calcChanges === 'true' && response.data && response.data.observations) {
      response.data.observations = calculateChanges(response.data.observations);
    }
    
    res.json(response.data);
  } catch (error) {
    console.error('FRED API error:', error.message);
    res.status(500).json({ error: error.message });
  }
});

// Treasury debt data endpoint
app.get('/api/treasury/debt', async (req, res) => {
  try {
    const { calculateChanges: calcChanges } = req.query;
    
    console.log('Fetching Treasury debt data...');
    const response = await axios.get('https://api.fiscaldata.treasury.gov/services/api/fiscal_service/v2/accounting/od/debt_to_penny', {
      params: {
        'page[size]': 10,
        'sort': '-record_date',
        'format': 'json'
      }
    });
    console.log('Treasury API response received');
    
    // Calculate changes if requested
    if (calcChanges === 'true' && response.data && response.data.data) {
      const dataWithValueField = response.data.data.map(item => ({
        ...item,
        value: item.tot_pub_debt_out_amt
      }));
      
      response.data.data = calculateChanges(dataWithValueField, 'value');
    }
    
    res.json(response.data);
  } catch (error) {
    console.error('Treasury API error:', error.message);
    res.status(500).json({ error: error.message });
  }
});

// Start server
app.listen(PORT, '0.0.0.0', () => {
  console.log(`Financial Data Platform API running on port ${PORT}`);
});
